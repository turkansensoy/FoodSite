@page "/addCategoryList"
@layout AdminLayout
@using Business.ValidationRules.FluentValidation;
@using Entities.Concrete;

@inject ICategoryService _categoryService;
@inject NavigationManager NavigatonManager;
@inject ISnackbar Snackbar;
<MudBreadcrumbs Items="_items"></MudBreadcrumbs>
<MudDivider Class="my-1" />
<br />
<MudGrid>
    <MudItem sm="6" md="4">
        <MudText Typo="Typo.h5">Kategori Bilgisi</MudText>
    </MudItem>
</MudGrid>
<br />
<MudContainer>
    <MudCard>
        <MudForm Model="@model" @ref="@form" Validation="@(CategoryValidator.ValidateValue)" ValidationDelay="0">
            <MudCardContent>
                <MudTextField @bind-Value="model.CategoryName"
                              For="@(()=>model.CategoryName)"
                              Immediate="true"
                              Label="Kategori Adı" />
                <br />
                <MudText>Resim Yükleme</MudText>
                <MudImage Src="@_userAvatar" @onclick="DisplayAction" Height="100" Width="100" Elevation="25" Class="rounded my-2"></MudImage>
            </MudCardContent>
        </MudForm>
    </MudCard>
    <MudItem>
        <br />
        <div Class="d-flex justify-end">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class=" justify-end" OnClick="@(async () => await Submit())">Kaydet</MudButton>
        </div>
    </MudItem>

</MudContainer>
@code {
    MudForm form;
    Category model = new();
    CategoryValidator CategoryValidator = new();
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("AnaSayfa", href: "/admin", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem("Kategoriler", href: "/admin/categorylist", icon: Icons.Material.Filled.Category),
            new BreadcrumbItem("Yeni Kategori", href: null, disabled: true, icon: Icons.Material.Filled.Create)
        };
    private string _imageBase64Data;
    private string _userAvatar = "images/cooking.png";

    private async Task Submit()
    {
        await form.Validate();
        if (form.IsValid)
        {

            if (!string.IsNullOrWhiteSpace(_imageBase64Data))
            {
                model.Image = _imageBase64Data;
            }
            if (model.Image == null)
            {
                Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
                Snackbar.Add("Resim ekleyiniz.", Severity.Error);
            }
            else
            {
                await _categoryService.Add(model);
                NavigatonManager.NavigateTo("/admin/categorylist/", forceLoad: true);
            }
        }

    }

    private async void DisplayAction()
    {
        var photo = await MediaPicker.Default.PickPhotoAsync();
        if (photo != null)
        {
            byte[] imageBytes;
            var newFile = Path.Combine(FileSystem.CacheDirectory, photo.FileName);
            var stream = await photo.OpenReadAsync();
            using (MemoryStream ms = new MemoryStream())
            {
                stream.CopyTo(ms);
                imageBytes = ms.ToArray();
            }
            _imageBase64Data = Convert.ToBase64String(imageBytes);
            _userAvatar = string.Format("data:image/png;base64,{0}", _imageBase64Data);
            this.StateHasChanged();
        }
    }
}
