@page "/user/mutliRecipeMenu/{id}"
@using Entities.Dtos;
@layout MainLayout;
@inject IMenuService _menuService;
@inject IMaterialService _materialService;
<MudGrid>
    @if (Model !=null)
    {
        @foreach (var model in Model )
        {
            <MudItem>
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.body1">@model.MenuName</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudDivider Class="my-1" />
                    <br />
                    <MudCardContent>
                        <MudItem sm="6" md="4">
                            <MudText Typo="Typo.h6">Malzemeler</MudText>
                        </MudItem>
                        <MudList>
                            @foreach (var item in ListMultiSelectMaterial)
                            {
                                <MudItem>
                                    <MudText Typo="Typo.body2"><MudImage Src="./images/stop.png" Height="25" Width="25" />@item.MaterialNumber @item.Guantity @item.MaterialName</MudText>
                                </MudItem>
                            }
                        </MudList>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    }
</MudGrid>

@code {
    [Parameter]
    public string id { get; set; }
    List<MultiSelectMaterialDto> ListMultiSelectMaterial = new();
    List<GetRecipeMenuDto> Model = new();
    protected override async Task OnInitializedAsync()
    {
        var Id= Convert.ToInt32(id);
        Model= await _menuService.GetById(Id); 

        foreach (var item in Model)
        {
            foreach (var recipeId in item.MenuRecipeGetDtos)
            {
                ListMultiSelectMaterial = await _materialService.GetMultiSelectMaterial(recipeId.RecipeId);
            }
        }
    }
}
